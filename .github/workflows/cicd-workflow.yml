name: CICD

on:
  push:
    branches: [main]

jobs:
  build-event:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/u0t4o1i1
      - name: Build docker image
        run: docker build -t public.ecr.aws/u0t4o1i1/playpal_event_service:latest -f backend/eventCreation/Dockerfile backend/eventCreation
      - name: Publish image to docker hub
        run: docker push public.ecr.aws/u0t4o1i1/playpal_event_service:latest

  # build-ml:
  #   runs-on: [ubuntu-latest]
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3
  #     - name: Install AWS CLI
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y awscli
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-2
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/r2n9m4w8
  #     - name: Build docker image
  #       run: docker build -t public.ecr.aws/r2n9m4w8/playpal_ml_repo:latest -f backend/mlService/Dockerfile backend/mlService
  #     - name: Publish image to docker hub
  #       run: docker push public.ecr.aws/r2n9m4w8/playpal_ml_repo:latest

  build-usercreation:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/u0t4o1i1
      - name: Build docker image
        run: docker build -t public.ecr.aws/u0t4o1i1/playpal_usercreation_service:latest -f backend/usercreation/Dockerfile backend/usercreation
      - name: Publish image to docker hub
        run: docker push public.ecr.aws/u0t4o1i1/playpal_usercreation_service:latest

  build-playareastatus:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/u0t4o1i1
      - name: Build docker image
        run: docker build -t public.ecr.aws/u0t4o1i1/playpal_playareastatus_service:latest -f backend/PlayareaStatus/Dockerfile backend/PlayareaStatus
      - name: Publish image to docker hub
        run: docker push public.ecr.aws/u0t4o1i1/playpal_playareastatus_service:latest

  build-frontend:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/u0t4o1i1
      - name: Build docker image for frontend
        run: docker build --build-arg REACT_APP_COGNITO_USER_POOL_ID=${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }} --build-arg REACT_APP_COGNITO_CLIENT_ID=${{ secrets.REACT_APP_COGNITO_CLIENT_ID }} -t public.ecr.aws/u0t4o1i1/playpal_frontend:latest -f frontend/Dockerfile frontend
      - name: Publish frontend image to docker hub
        run: docker push public.ecr.aws/u0t4o1i1/playpal_frontend:latest

  # deploy-event:
  #   needs: build-event
  #   runs-on: [self-hosted, backend]
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull public.ecr.aws/r2n9m4w8/playpal_event_service:latest
  #     - name: Delete old container
  #       run: docker rm -f playpal-eventCreation
  #     - name: Run docker container
  #       run: docker run -d -p 3500:3500 --name playpal-eventCreation -e DB_HOST=${{secrets.DB_HOST}} -e DB_USER=${{secrets.DB_USER}} -e DB_PASS=${{secrets.DB_PASS}} -e DB_PORT=${{secrets.DB_PORT}} -e DB_DB=${{secrets.DB_DB}} -e ACCESSKEYID=${{secrets.ACCESSKEYID}} -e SECRETACCESSKEY=${{secrets.SECRETACCESSKEY}} --log-driver=awslogs --log-opt awslogs-region=us-east-2 --log-opt awslogs-group=Playpal_EventService public.ecr.aws/r2n9m4w8/playpal_event_service:latest

  # deploy-ml:
  #   needs: build-ml
  #   runs-on: [self-hosted, backend]
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull public.ecr.aws/r2n9m4w8/playpal_ml_repo:latest
  #     - name: Delete old container
  #       run: docker rm -f playpal-ml
  #     - name: Run docker container
  #       run: docker run -d -p 3501:3501 --name playpal-ml -e ACCESSKEYID=${{secrets.ACCESSKEYID}} -e SECRETACCESSKEY=${{secrets.SECRETACCESSKEY}} --log-driver=awslogs --log-opt awslogs-region=us-east-2 --log-opt awslogs-group=Playpal_Mlservice public.ecr.aws/r2n9m4w8/playpal_ml_repo:latest

  # deploy-usercreation:
  #   needs: build-usercreation
  #   runs-on: [self-hosted, backend]
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull public.ecr.aws/r2n9m4w8/playpal_usercreation_service:latest
  #     - name: Delete old container
  #       run: docker rm -f playpal-usercreation
  #     - name: Run docker container
  #       run: |
  #         docker run -d -p 3001:3001 --name playpal-usercreation \
  #         -e DB_HOST=${{ secrets.DB_HOST }} \
  #         -e DB_USER=${{ secrets.DB_USER }} \
  #         -e DB_PASSWORD=${{ secrets.DB_PASS }} \
  #         -e DB_DATABASE=${{ secrets.DB_DB }} \
  #         -e DB_PORT=${{ secrets.DB_PORT }} \
  #         -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_SHIREESH }} \
  #         -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_SHIREESH }} \
  #         -e AWS_REGION=${{ secrets.AWS_REGION }} \
  #         -e COGNITO_USER_POOL_ID=${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }} \
  #         -e COGNITO_CLIENT_ID=${{ secrets.REACT_APP_COGNITO_CLIENT_ID }} \
  #         --log-driver=awslogs --log-opt awslogs-region=us-east-2 --log-opt awslogs-group=Playpal_Usercreation \
  #         public.ecr.aws/r2n9m4w8/playpal_usercreation_service:latest

  deploy-usercreation:
    needs: [build-usercreation, build-playareastatus, build-event]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file backend/usercreation/user-creation-ecs-cloudformation.yaml \
            --stack-name my-ecs-stack-2 \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              DBHost=${{ secrets.DB_HOST }} \
              DBUser=${{ secrets.DB_USER }} \
              DBPassword=${{ secrets.DB_PASS }} \
              DBDatabase=${{ secrets.DB_DB }} \
              DBPort=${{ secrets.DB_PORT }} \
              AWSRegion=us-east-1 \
              AWSAccessKeyID=${{ secrets.AWS_ACCESS_KEY_ID_SHIREESH }} \
              AWSSecretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY_SHIREESH }} \
              ImageURLPlayAreaStatus=public.ecr.aws/u0t4o1i1/playpal_playareastatus_service:latest \
              CognitoUserPoolId=${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }} \
              CognitoClientId=${{ secrets.REACT_APP_COGNITO_CLIENT_ID }} \
              ImageURLEvent=public.ecr.aws/u0t4o1i1/playpal_event_service:latest \
              ImageURLUserCreation=public.ecr.aws/u0t4o1i1/playpal_usercreation_service:latest

  # deploy-playareastatus:
  #   needs: build-playareastatus
  #   runs-on: [self-hosted, backend]
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull public.ecr.aws/r2n9m4w8/playpal_playareastatus_service:latest
  #     - name: Delete old container
  #       run: docker rm -f playpal-playareastatus
  #     - name: Run docker container
  #       run: |
  #         docker run -d -p 3002:3002 --name playpal-playareastatus \
  #         -e DB_HOST=${{ secrets.DB_HOST }} \
  #         -e DB_USER=${{ secrets.DB_USER }} \
  #         -e DB_PASSWORD=${{ secrets.DB_PASS }} \
  #         -e DB_DATABASE=${{ secrets.DB_DB }} \
  #         -e DB_PORT=${{ secrets.DB_PORT }} \
  #         -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_SHIREESH }} \
  #         -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_SHIREESH }} \
  #         -e AWS_REGION=${{ secrets.AWS_REGION }} \
  #         --log-driver=awslogs --log-opt awslogs-region=us-east-2 --log-opt awslogs-group=Playpal_Playareastatus \
  #         public.ecr.aws/r2n9m4w8/playpal_playareastatus_service:latest

  # deploy-playareastatus:
  #   needs: build-playareastatus
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Deploy CloudFormation stack
  #       run: |
  #         aws cloudformation deploy \
  #           --template-file backend/usercreation/user-creation-ecs-cloudformation.yaml \
  #           --stack-name my-ecs-stack \
  #           --capabilities CAPABILITY_NAMED_IAM \
  #           --parameter-overrides \
  #             DBHost=${{ secrets.DB_HOST }} \
  #             DBUser=${{ secrets.DB_USER }} \
  #             DBPassword=${{ secrets.DB_PASS }} \
  #             DBDatabase=${{ secrets.DB_DB }} \
  #             DBPort=${{ secrets.DB_PORT }} \
  #             AWSRegion=us-east-1 \
  #             AWSAccessKeyID=${{ secrets.AWS_ACCESS_KEY_ID_SHIREESH }} \
  #             AWSSecretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY_SHIREESH }} \
  #             ImageURLPlayAreaStatus=public.ecr.aws/u0t4o1i1/playpal_playareastatus_service:latest
  #             CognitoUserPoolId=${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }} \
  #             CognitoClientId=${{ secrets.REACT_APP_COGNITO_CLIENT_ID }} \
  #             ImageURLUserCreation=public.ecr.aws/u0t4o1i1/playpal_usercreation_service:latest

  deploy-frontend:
    needs: build-frontend
    runs-on: [self-hosted, frontend]
    steps:
      - name: Pull frontend image from docker hub
        run: docker pull public.ecr.aws/u0t4o1i1/playpal_frontend:latest

      - name: Delete old frontend container
        run: docker rm -f playpal-frontend

      - name: Run frontend docker container
        run: docker run -d -p 80:80 --name playpal-frontend public.ecr.aws/u0t4o1i1/playpal_frontend:latest
